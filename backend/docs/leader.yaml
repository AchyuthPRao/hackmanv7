paths:
  /leader/login:
    post:
      tags:
        - Leader
      summary: Leader Authetication route
      consumes:
        - "application/json"
      produces:
        - "application/json"
      requestBody:
        content:
          "application/json":
            schema:
              properties:
                email:
                  type: "string"
                  format: "email"
                password:
                  type: "string"
      responses:
        200:
          description: An object with token, message and state of operation

  /leader/getTeamDetails:
    post:
      tags:
        - Leader
      summary: Leader Authentication route
      security:
        - bearerAuth: []
      consumes:
        - "application/json"
      produces:
        - "application/json"
      requestBody:
        content:
          "application/json":
            schema:
              properties:
                teamName:
                  type: string
      responses:
        200:
          description: object containing state of operation, team details and message

  /leader/addMember/{id}:
    post:
      tags:
        - Leader
      summary: For adding a team member
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: id of the team
          required: true
      consumes:
        - "application/json"
      produces:
        - "application/json"
      requestBody:
        content:
          "application/json":
            schema:
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                phoneNumber:
                  type: string
      responses:
        200:
          description: object containing state of operation, member detail and message

  /leader/removeMember/{id}:
    delete:
      tags:
        - Leader
      summary: For removing a team member
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: id of the member to be deleted
          required: true
      responses:
        200:
          description: object containing state of operation and message

  /leader/editMember/{id}:
    put:
      tags:
        - Leader
      summary: For editing a Team Member
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: id of member to be edited
          required: true
      consumes:
        - "application/json"
      produces:
        - "application/json"
      requestBody:
        content:
          "application/json":
            schema:
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                phoneNumber:
                  type: string
      responses:
        200:
          description: object containing state of operation and edited member details

  /leader/addGithub/{id}:
    put:
      tags:
        - Leader
      summary: For Adding Github Link of The Particular Team
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          description: id of the team
          required: true
      consumes:
        - "application/json"
      produces:
        - "application/json"
      requestBody:
        content:
          "application/json":
            schema:
              properties:
                githubLink:
                  type: String
      responses:
        200:
          description: object containing state of operation, message and member details

  /leader/uploadPic/{id}:
    post:
      tags:
        - Leader
      summary: For uploading payment screenshot
      security:
        - bearerAuth: []
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - in: path
          name: id
          description: id of the team
          required: true
          schema:
            type: string
        - in: formData
          name: upfile
          type: file
          description: The file to upload.
      responses:
        200:
          description: object containing state of operation and message
